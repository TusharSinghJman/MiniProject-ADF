{
	"name": "Dataflow_Misumi_Preparation",
	"properties": {
		"description": "Merging the individual items and product categories and cleaning process",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Misumi_ProductCategories",
						"type": "DatasetReference"
					},
					"name": "Misumi"
				},
				{
					"dataset": {
						"referenceName": "Misumi_Items_per_ProductCategories",
						"type": "DatasetReference"
					},
					"name": "Items"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Prep_Merged_Items_Products",
						"type": "DatasetReference"
					},
					"name": "CleanedMergedData",
					"description": "merge the products and items table and output the final cleaned column to the sink and store it in the DB"
				}
			],
			"transformations": [
				{
					"name": "updateDescriptionColumn"
				},
				{
					"name": "join"
				},
				{
					"name": "checkDuplicates",
					"description": "drop duplicates rows"
				},
				{
					"name": "duplicateColumns",
					"description": "drop duplicate columns"
				},
				{
					"name": "derivedShippingColumn",
					"description": "if the shipping column has value as o replace it as same day "
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Item } as string,",
				"          {Sub Category} as string,",
				"          Category as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Misumi",
				"source(output(",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandName as string,",
				"          earliestShipping as string,",
				"          description as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Items",
				"Items derive(description = regexReplace(description, \"<.*?>|[^\\\\sa-zA-Z0-9_.-]\", \" \")) ~> updateDescriptionColumn",
				"Misumi, updateDescriptionColumn join({Item } == categoryName,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join",
				"join aggregate(groupBy(categoryCode,",
				"          seriesCode),",
				"     each(match(!in(['categoryCode','seriesCode'],name)), $$ = first($$))) ~> checkDuplicates",
				"checkDuplicates select(mapColumn(",
				"          Series_Code = seriesCode,",
				"          Item_Category_Code = categoryCode,",
				"          Series_Name = seriesName,",
				"          Item_Category = {Item },",
				"          Sub_Category = {Sub Category},",
				"          Category,",
				"          Brand = brandName,",
				"          EarliestShipping = earliestShipping,",
				"          Description = description",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> duplicateColumns",
				"duplicateColumns derive(EarliestShipping = iif(EarliestShipping == \"0\", \"Same day\", EarliestShipping + \" days\")) ~> derivedShippingColumn",
				"derivedShippingColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError') ~> CleanedMergedData"
			]
		}
	}
}