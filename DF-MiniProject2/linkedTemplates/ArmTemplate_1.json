{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-MiniProject2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow_Misumi_Preparation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Merging the individual items and product categories and cleaning process",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Misumi_ProductCategories",
								"type": "DatasetReference"
							},
							"name": "Misumi"
						},
						{
							"dataset": {
								"referenceName": "Misumi_Items_per_ProductCategories",
								"type": "DatasetReference"
							},
							"name": "Items"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Merged_Items_Products",
								"type": "DatasetReference"
							},
							"name": "MergedData",
							"description": "merge the products and items table"
						}
					],
					"transformations": [
						{
							"name": "updateDescriptionColumn"
						},
						{
							"name": "join"
						},
						{
							"name": "checkDuplicates",
							"description": "drop duplicates rows"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Item } as string,",
						"          {Sub Category} as string,",
						"          Category as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Misumi",
						"source(output(",
						"          categoryCode as string,",
						"          categoryName as string,",
						"          seriesCode as string,",
						"          seriesName as string,",
						"          brandName as string,",
						"          earliestShipping as string,",
						"          description as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Items",
						"Items derive(description = regexReplace(description, \"^[a-zA-Z0-9_.-]\", \"\")) ~> updateDescriptionColumn",
						"Misumi, updateDescriptionColumn join({Item } == categoryName,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join",
						"join aggregate(groupBy(categoryCode,",
						"          seriesCode),",
						"     each(match(!in(['categoryCode', 'seriesCode'], name)), $$ = first($$))) ~> checkDuplicates",
						"checkDuplicates sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MergedData"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clean_Items_per_Categories_Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Misumi_Items_per_ProductCategories",
								"type": "DatasetReference"
							},
							"name": "ItemsPerCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Misumi_Items_DB",
								"type": "DatasetReference"
							},
							"name": "ItemsSink"
						}
					],
					"transformations": [
						{
							"name": "updateDescriptionColumn",
							"description": "remove any invalid characters from the column"
						}
					],
					"scriptLines": [
						"source(output(",
						"          categoryCode as string,",
						"          categoryName as string,",
						"          seriesCode as string,",
						"          seriesName as string,",
						"          brandName as string,",
						"          earliestShipping as string,",
						"          description as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ItemsPerCategories",
						"ItemsPerCategories derive(description = regexReplace(description, \"^[a-zA-Z0-9_.-]\", \"\")) ~> updateDescriptionColumn",
						"updateDescriptionColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ItemsSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Preparation_Pipeline_webScraping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Preparation of Misumi data",
						"description": "run the dataflow pipeline for preparation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow_Misumi_Preparation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Misumi": {},
									"Items": {},
									"MergedData": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataflow_Misumi_Preparation')]"
			]
		}
	]
}